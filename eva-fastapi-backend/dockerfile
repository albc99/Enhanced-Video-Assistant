# 
FROM python:3.8

# 
WORKDIR /code

# 
COPY ./requirements.txt /code/requirements.txt
COPY download_models.py .
COPY ./models /code/models
# Install ffmpeg and unixodbc-dev
# RUN apt-get update && \
#     apt-get install -y ffmpeg && \
#     RUN apt-get install -y tdsodbc unixodbc-dev \
#     RUN apt-get install apt-transport-https \
#     RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
#     RUN curl https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list \
#     RUN ACCEPT_EULA=Y apt-get install msodbcsql18 --assume-yes \
#     apt-get clean && \ 
#     rm -rf /var/lib/apt/lists/*

RUN apt-get update &&\
    apt-get install -y ffmpeg && \
    apt-get install --yes --no-install-recommends \
    apt-transport-https \
    curl \
    gnupg \
    unixodbc-dev \
    && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
    && curl https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list \
    && apt-get update \
    && ACCEPT_EULA=Y apt-get install --yes --no-install-recommends msodbcsql17 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/*

# Create a virtual environment in the container
RUN python3 -m venv .venv

# Activate the virtual environment
ENV PATH="/app/.venv/bin:$PATH"

#  
RUN pip install https://download.pytorch.org/whl/cpu/torch-2.1.2%2Bcpu-cp38-cp38-linux_x86_64.whl && \
    pip install --upgrade --force-reinstall openai-whisper==20231117 \
    pip install -U git+https://github.com/jianfch/stable-ts.git \
    pip install --no-cache-dir --upgrade -r /code/requirements.txt && \
    python3 download_models.py


# 
COPY ./app /code/app
# 
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "80"]